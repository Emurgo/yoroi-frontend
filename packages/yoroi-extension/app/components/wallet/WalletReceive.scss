.component {
  flex: 1;
  overflow-x: hidden;
  overflow-y: overlay;
  padding: 40px 24px;

  .hierarchy {
    margin-bottom: 24px;
    font-family: var(--font-regular);
    font-size: 20px;
    padding-bottom: 5px;
    border-bottom: 1px solid var(--theme-separation-border-color);

    .filter {
      font-size: 14px;
      margin-left: 14px;
    }
  }

  &::-webkit-scrollbar-button {
    height: 7px;
    display: block;
  }

  .notFound {
    padding-top: 2rem;
    text-align: center;
    color: var(--theme-transactions-list-detail-row-text-color);
    svg {
      max-width: 140px;
      max-height: 140px;
    }
    h1 {
      margin-bottom: 20px;
      font-size: 1.2rem;
      font-family: var(--font-medium);
    }
    p {
      margin: 1rem 0;
      font-size: .9rem;
    }
  }

  .generatedAddresses {
    color: var(--theme-bordered-box-text-color);
    font-family: var(--font-regular);
    font-size: 14px;
    line-height: 22px;

    .generatedAddressesGrid {
      display: flex;
      text-align: right;
      align-items: center;

      &> *:first-child {
        text-align: left;
        flex: 1.5;
      }
      & > * {
        flex: 1;
        margin-left: 10px;
      }
    }
    h2 {
      font-size: 14px;
      font-family: var(--font-regular);
      margin-bottom: 10px;
      line-height: 22px;
      font-weight: lighter;
      color: var(--theme-transactions-list-detail-row-text-color);
    }
    .labelHeader{
      text-align: left;
    }
    .walletAddress {
      display: flex;
      padding: 8.5px 0;
      word-break: break-all;

      & + .walletAddress {
        border-top: 1px solid var(--theme-separation-border-color);
      }

      .addressActions {
        .addressActionItemBlock {
          cursor: pointer;
          letter-spacing: 0.5px;
          text-align: right;
          line-height: 20px;
          vertical-align: top;
          white-space: nowrap;

          * {
            vertical-align: middle;
          }

          span {
            color: var(--theme-label-button-color);
            font-family: var(--font-regular);
            font-size: 14px;
            margin-left: 6px;
          }
        }

        .verifyActionBlock, .generateURLActionBlock {
          button {
            cursor: pointer;
          }
        }
        
        .generateURLActionBlock {
          margin-left: unset;
        }
      }
      .labelAddress {
        font-family: var(--font-regular);
        text-align: left;
        font-size: 12px;
        display: flex;
        align-items: center;
        .labelText {
          position: relative;

          background: var(--theme-border-gray);
          color: #6B7384;
          padding: 2px 6px;
          height: 27px;
          &:after {
            content: " ";
            display: block;
            width: 0;
            height: 0;
            border-top: 13px solid transparent;
            border-bottom: 14px solid transparent;
            border-left: 14px solid var(--theme-border-gray);
            position: absolute;
            top: 50%;
            margin-top: -14px;
            right: -14px;
            z-index: 2;
          }
        }
        button {
          margin: 0;
          margin-right: 8px;
        }
      }
    }
  }
}

:global(.YoroiModern) .component {
  .generatedAddresses {
    .walletAddress {
      padding: 12px 0;
    }
  }
}

.addressHash {
  font-size: 14px;
  line-height: 22px;
  font-family: var(--font-mono-regular);
  color: var(--theme-wallet-receive-hash-text-color);
}

.addressHashUsed {
  color: var(--theme-wallet-receive-hash-used-text-color);
}

.verifyIcon,
.copyIcon, 
.generateURIIcon, 
.labelAddressIcon {
  cursor: pointer;
  object-fit: contain;
  display: inline-flex;
  margin-left: 5px;
  width: 32px;
  height: 32px;
  border-radius: 50%;
  transition: background-color 0.3s;
  & > svg {
    display: block;
    margin: auto;
    height: 20px;
    width: 20px;
    path {
      fill: var(--theme-icon-copy-address-color);
    }
  }
  &:hover {
    background-color: var(--cmn-default-color-grey-5);
  }
}
.generateURIIcon {
  & > svg path:first-child {
    fill: unset;
  }
}