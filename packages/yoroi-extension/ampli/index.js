/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * Ampli - A strong typed wrapper for your Analytics
 *
 * This file is generated by Amplitude.
 * To update run 'ampli pull extension'
 *
 * Required dependencies: @amplitude/analytics-browser@^1.3.0
 * Tracking Plan Version: 7
 * Build: 1.0.0
 * Runtime: browser:typescript-ampli-v2
 *
 * [View Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest)
 *
 * [Full Setup Instructions](https://data.amplitude.com/emurgo/Yoroi/implementation/extension)
 */
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import * as amplitude from '@amplitude/analytics-browser';
export var ApiKey = {
    production: 'd44950b777177c2ebee5f21f194c1231',
    development: '52a980fd5fb8da5fc680687d7e991e18'
};
/**
 * Default Amplitude configuration options. Contains tracking plan information.
 */
export var DefaultConfiguration = __assign({ plan: {
        version: '7',
        branch: 'main',
        source: 'extension',
        versionId: 'a0985241-d0c0-4bda-bc6d-271830af0067'
    } }, {
    ingestionMetadata: {
        sourceName: 'browser-typescript-ampli',
        sourceVersion: '2.0.0'
    }
});
var AllWalletsPageViewed = /** @class */ (function () {
    function AllWalletsPageViewed() {
        this.event_type = 'All Wallets Page Viewed';
    }
    return AllWalletsPageViewed;
}());
export { AllWalletsPageViewed };
var AssetsPageViewed = /** @class */ (function () {
    function AssetsPageViewed() {
        this.event_type = 'Assets Page Viewed';
    }
    return AssetsPageViewed;
}());
export { AssetsPageViewed };
var ClaimAdaPageViewed = /** @class */ (function () {
    function ClaimAdaPageViewed() {
        this.event_type = 'Claim ADA Page Viewed';
    }
    return ClaimAdaPageViewed;
}());
export { ClaimAdaPageViewed };
var ConnectorPageViewed = /** @class */ (function () {
    function ConnectorPageViewed() {
        this.event_type = 'Connector Page Viewed';
    }
    return ConnectorPageViewed;
}());
export { ConnectorPageViewed };
var CreateWalletDetailsStepViewed = /** @class */ (function () {
    function CreateWalletDetailsStepViewed() {
        this.event_type = 'Create Wallet Details Step Viewed';
    }
    return CreateWalletDetailsStepViewed;
}());
export { CreateWalletDetailsStepViewed };
var CreateWalletDetailsSubmitted = /** @class */ (function () {
    function CreateWalletDetailsSubmitted() {
        this.event_type = 'Create Wallet Details Submitted';
    }
    return CreateWalletDetailsSubmitted;
}());
export { CreateWalletDetailsSubmitted };
var CreateWalletLanguagePageViewed = /** @class */ (function () {
    function CreateWalletLanguagePageViewed() {
        this.event_type = 'Create Wallet Language Page Viewed';
    }
    return CreateWalletLanguagePageViewed;
}());
export { CreateWalletLanguagePageViewed };
var CreateWalletLearnPhraseStepViewed = /** @class */ (function () {
    function CreateWalletLearnPhraseStepViewed() {
        this.event_type = 'Create Wallet Learn Phrase Step Viewed';
    }
    return CreateWalletLearnPhraseStepViewed;
}());
export { CreateWalletLearnPhraseStepViewed };
var CreateWalletSavePhraseStepViewed = /** @class */ (function () {
    function CreateWalletSavePhraseStepViewed() {
        this.event_type = 'Create Wallet Save Phrase Step Viewed';
    }
    return CreateWalletSavePhraseStepViewed;
}());
export { CreateWalletSavePhraseStepViewed };
var CreateWalletSelectMethodPageViewed = /** @class */ (function () {
    function CreateWalletSelectMethodPageViewed() {
        this.event_type = 'Create Wallet Select Method Page Viewed';
    }
    return CreateWalletSelectMethodPageViewed;
}());
export { CreateWalletSelectMethodPageViewed };
var CreateWalletTermsPageViewed = /** @class */ (function () {
    function CreateWalletTermsPageViewed() {
        this.event_type = 'Create Wallet Terms Page Viewed';
    }
    return CreateWalletTermsPageViewed;
}());
export { CreateWalletTermsPageViewed };
var CreateWalletVerifyPhraseStepViewed = /** @class */ (function () {
    function CreateWalletVerifyPhraseStepViewed() {
        this.event_type = 'Create Wallet Verify Phrase Step Viewed';
    }
    return CreateWalletVerifyPhraseStepViewed;
}());
export { CreateWalletVerifyPhraseStepViewed };
var CreateWalletVerifyPhraseWordSelected = /** @class */ (function () {
    function CreateWalletVerifyPhraseWordSelected(event_properties) {
        this.event_properties = event_properties;
        this.event_type = 'Create Wallet Verify Phrase Word Selected';
        this.event_properties = event_properties;
    }
    return CreateWalletVerifyPhraseWordSelected;
}());
export { CreateWalletVerifyPhraseWordSelected };
var DappPopupAddCollateralPageViewed = /** @class */ (function () {
    function DappPopupAddCollateralPageViewed() {
        this.event_type = 'Dapp Popup Add Collateral Page Viewed';
    }
    return DappPopupAddCollateralPageViewed;
}());
export { DappPopupAddCollateralPageViewed };
var DappPopupConnectWalletPageViewed = /** @class */ (function () {
    function DappPopupConnectWalletPageViewed(event_properties) {
        this.event_properties = event_properties;
        this.event_type = 'Dapp Popup Connect Wallet Page Viewed';
        this.event_properties = event_properties;
    }
    return DappPopupConnectWalletPageViewed;
}());
export { DappPopupConnectWalletPageViewed };
var DappPopupConnectWalletPasswordPageViewed = /** @class */ (function () {
    function DappPopupConnectWalletPasswordPageViewed() {
        this.event_type = 'Dapp Popup Connect Wallet Password Page Viewed';
    }
    return DappPopupConnectWalletPasswordPageViewed;
}());
export { DappPopupConnectWalletPasswordPageViewed };
var DappPopupSignTransactionPageViewed = /** @class */ (function () {
    function DappPopupSignTransactionPageViewed() {
        this.event_type = 'Dapp Popup Sign Transaction Page Viewed';
    }
    return DappPopupSignTransactionPageViewed;
}());
export { DappPopupSignTransactionPageViewed };
var DappPopupSignTransactionSubmitted = /** @class */ (function () {
    function DappPopupSignTransactionSubmitted() {
        this.event_type = 'Dapp Popup Sign Transaction Submitted';
    }
    return DappPopupSignTransactionSubmitted;
}());
export { DappPopupSignTransactionSubmitted };
var NftGalleryDetailsImageViewed = /** @class */ (function () {
    function NftGalleryDetailsImageViewed() {
        this.event_type = 'NFT Gallery Details Image Viewed';
    }
    return NftGalleryDetailsImageViewed;
}());
export { NftGalleryDetailsImageViewed };
var NftGalleryDetailsNavigation = /** @class */ (function () {
    function NftGalleryDetailsNavigation(event_properties) {
        this.event_properties = event_properties;
        this.event_type = 'NFT Gallery Details Navigation';
        this.event_properties = event_properties;
    }
    return NftGalleryDetailsNavigation;
}());
export { NftGalleryDetailsNavigation };
var NftGalleryDetailsPageViewed = /** @class */ (function () {
    function NftGalleryDetailsPageViewed() {
        this.event_type = 'NFT Gallery Details Page Viewed';
    }
    return NftGalleryDetailsPageViewed;
}());
export { NftGalleryDetailsPageViewed };
var NftGalleryDetailsTab = /** @class */ (function () {
    function NftGalleryDetailsTab(event_properties) {
        this.event_properties = event_properties;
        this.event_type = 'NFT Gallery Details Tab';
        this.event_properties = event_properties;
    }
    return NftGalleryDetailsTab;
}());
export { NftGalleryDetailsTab };
var NftGalleryGridViewSelected = /** @class */ (function () {
    function NftGalleryGridViewSelected(event_properties) {
        this.event_properties = event_properties;
        this.event_type = 'NFT Gallery Grid View Selected';
        this.event_properties = event_properties;
    }
    return NftGalleryGridViewSelected;
}());
export { NftGalleryGridViewSelected };
var NftGalleryPageViewed = /** @class */ (function () {
    function NftGalleryPageViewed(event_properties) {
        this.event_properties = event_properties;
        this.event_type = 'NFT Gallery Page Viewed';
        this.event_properties = event_properties;
    }
    return NftGalleryPageViewed;
}());
export { NftGalleryPageViewed };
var NftGallerySearchActivated = /** @class */ (function () {
    function NftGallerySearchActivated(event_properties) {
        this.event_properties = event_properties;
        this.event_type = 'NFT Gallery Search Activated';
        this.event_properties = event_properties;
    }
    return NftGallerySearchActivated;
}());
export { NftGallerySearchActivated };
var ReceivePageViewed = /** @class */ (function () {
    function ReceivePageViewed() {
        this.event_type = 'Receive Page Viewed';
    }
    return ReceivePageViewed;
}());
export { ReceivePageViewed };
var RestoreWalletDetailsStepViewed = /** @class */ (function () {
    function RestoreWalletDetailsStepViewed() {
        this.event_type = 'Restore Wallet Details Step Viewed';
    }
    return RestoreWalletDetailsStepViewed;
}());
export { RestoreWalletDetailsStepViewed };
var RestoreWalletDetailsSubmitted = /** @class */ (function () {
    function RestoreWalletDetailsSubmitted() {
        this.event_type = 'Restore Wallet Details Submitted';
    }
    return RestoreWalletDetailsSubmitted;
}());
export { RestoreWalletDetailsSubmitted };
var RestoreWalletEnterPhraseStepStatus = /** @class */ (function () {
    function RestoreWalletEnterPhraseStepStatus(event_properties) {
        this.event_properties = event_properties;
        this.event_type = 'Restore Wallet Enter Phrase Step Status';
        this.event_properties = event_properties;
    }
    return RestoreWalletEnterPhraseStepStatus;
}());
export { RestoreWalletEnterPhraseStepStatus };
var RestoreWalletEnterPhraseStepViewed = /** @class */ (function () {
    function RestoreWalletEnterPhraseStepViewed(event_properties) {
        this.event_properties = event_properties;
        this.event_type = 'Restore Wallet Enter Phrase Step Viewed';
        this.event_properties = event_properties;
    }
    return RestoreWalletEnterPhraseStepViewed;
}());
export { RestoreWalletEnterPhraseStepViewed };
var RestoreWalletTypeStepViewed = /** @class */ (function () {
    function RestoreWalletTypeStepViewed() {
        this.event_type = 'Restore Wallet Type Step Viewed';
    }
    return RestoreWalletTypeStepViewed;
}());
export { RestoreWalletTypeStepViewed };
var SendInitiated = /** @class */ (function () {
    function SendInitiated() {
        this.event_type = 'Send Initiated';
    }
    return SendInitiated;
}());
export { SendInitiated };
var SendSelectAssetPageViewed = /** @class */ (function () {
    function SendSelectAssetPageViewed() {
        this.event_type = 'Send Select Asset Page Viewed';
    }
    return SendSelectAssetPageViewed;
}());
export { SendSelectAssetPageViewed };
var SendSelectAssetSelected = /** @class */ (function () {
    function SendSelectAssetSelected(event_properties) {
        this.event_properties = event_properties;
        this.event_type = 'Send Select Asset Selected';
        this.event_properties = event_properties;
    }
    return SendSelectAssetSelected;
}());
export { SendSelectAssetSelected };
var SendSelectAssetUpdated = /** @class */ (function () {
    function SendSelectAssetUpdated(event_properties) {
        this.event_properties = event_properties;
        this.event_type = 'Send Select Asset Updated';
        this.event_properties = event_properties;
    }
    return SendSelectAssetUpdated;
}());
export { SendSelectAssetUpdated };
var SendSummaryPageViewed = /** @class */ (function () {
    function SendSummaryPageViewed(event_properties) {
        this.event_properties = event_properties;
        this.event_type = 'Send Summary Page Viewed';
        this.event_properties = event_properties;
    }
    return SendSummaryPageViewed;
}());
export { SendSummaryPageViewed };
var SendSummarySubmitted = /** @class */ (function () {
    function SendSummarySubmitted(event_properties) {
        this.event_properties = event_properties;
        this.event_type = 'Send Summary Submitted';
        this.event_properties = event_properties;
    }
    return SendSummarySubmitted;
}());
export { SendSummarySubmitted };
var SettingsPageViewed = /** @class */ (function () {
    function SettingsPageViewed() {
        this.event_type = 'Settings Page Viewed';
    }
    return SettingsPageViewed;
}());
export { SettingsPageViewed };
var StakingCenterPageViewed = /** @class */ (function () {
    function StakingCenterPageViewed() {
        this.event_type = 'Staking Center Page Viewed';
    }
    return StakingCenterPageViewed;
}());
export { StakingCenterPageViewed };
var SwapAssetFromChanged = /** @class */ (function () {
    function SwapAssetFromChanged(event_properties) {
        this.event_properties = event_properties;
        this.event_type = 'Swap Asset From Changed';
        this.event_properties = event_properties;
    }
    return SwapAssetFromChanged;
}());
export { SwapAssetFromChanged };
var SwapAssetToChanged = /** @class */ (function () {
    function SwapAssetToChanged(event_properties) {
        this.event_properties = event_properties;
        this.event_type = 'Swap Asset To Changed';
        this.event_properties = event_properties;
    }
    return SwapAssetToChanged;
}());
export { SwapAssetToChanged };
var SwapCancelationSubmitted = /** @class */ (function () {
    function SwapCancelationSubmitted(event_properties) {
        this.event_properties = event_properties;
        this.event_type = 'Swap Cancelation Submitted';
        this.event_properties = event_properties;
    }
    return SwapCancelationSubmitted;
}());
export { SwapCancelationSubmitted };
var SwapConfirmedPageViewed = /** @class */ (function () {
    function SwapConfirmedPageViewed(event_properties) {
        this.event_properties = event_properties;
        this.event_type = 'Swap Confirmed  Page Viewed';
        this.event_properties = event_properties;
    }
    return SwapConfirmedPageViewed;
}());
export { SwapConfirmedPageViewed };
var SwapInitiated = /** @class */ (function () {
    function SwapInitiated(event_properties) {
        this.event_properties = event_properties;
        this.event_type = 'Swap Initiated';
        this.event_properties = event_properties;
    }
    return SwapInitiated;
}());
export { SwapInitiated };
var SwapOrderSelected = /** @class */ (function () {
    function SwapOrderSelected(event_properties) {
        this.event_properties = event_properties;
        this.event_type = 'Swap Order Selected';
        this.event_properties = event_properties;
    }
    return SwapOrderSelected;
}());
export { SwapOrderSelected };
var SwapOrderSubmitted = /** @class */ (function () {
    function SwapOrderSubmitted(event_properties) {
        this.event_properties = event_properties;
        this.event_type = 'Swap Order Submitted';
        this.event_properties = event_properties;
    }
    return SwapOrderSubmitted;
}());
export { SwapOrderSubmitted };
var SwapPoolChanged = /** @class */ (function () {
    function SwapPoolChanged() {
        this.event_type = 'Swap Pool Changed';
    }
    return SwapPoolChanged;
}());
export { SwapPoolChanged };
var SwapSlippageChanged = /** @class */ (function () {
    function SwapSlippageChanged(event_properties) {
        this.event_properties = event_properties;
        this.event_type = 'Swap Slippage Changed';
        this.event_properties = event_properties;
    }
    return SwapSlippageChanged;
}());
export { SwapSlippageChanged };
var TransactionsPageViewed = /** @class */ (function () {
    function TransactionsPageViewed() {
        this.event_type = 'Transactions Page Viewed';
    }
    return TransactionsPageViewed;
}());
export { TransactionsPageViewed };
var VotingPageViewed = /** @class */ (function () {
    function VotingPageViewed() {
        this.event_type = 'Voting Page Viewed';
    }
    return VotingPageViewed;
}());
export { VotingPageViewed };
var WalletPageViewed = /** @class */ (function () {
    function WalletPageViewed() {
        this.event_type = 'Wallet Page Viewed';
    }
    return WalletPageViewed;
}());
export { WalletPageViewed };
var getVoidPromiseResult = function () { return ({ promise: Promise.resolve() }); };
// prettier-ignore
var Ampli = /** @class */ (function () {
    function Ampli() {
        this.disabled = false;
    }
    Object.defineProperty(Ampli.prototype, "client", {
        get: function () {
            this.isInitializedAndEnabled();
            return this.amplitude;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Ampli.prototype, "isLoaded", {
        get: function () {
            return this.amplitude != null;
        },
        enumerable: false,
        configurable: true
    });
    Ampli.prototype.isInitializedAndEnabled = function () {
        if (!this.amplitude) {
            console.error('ERROR: Ampli is not yet initialized. Have you called ampli.load() on app start?');
            return false;
        }
        return !this.disabled;
    };
    /**
     * Initialize the Ampli SDK. Call once when your application starts.
     *
     * @param options Configuration options to initialize the Ampli SDK with.
     */
    Ampli.prototype.load = function (options) {
        var _a;
        this.disabled = (_a = options.disabled) !== null && _a !== void 0 ? _a : false;
        if (this.amplitude) {
            console.warn('WARNING: Ampli is already intialized. Ampli.load() should be called once at application startup.');
            return getVoidPromiseResult();
        }
        var apiKey = null;
        if (options.client && 'apiKey' in options.client) {
            apiKey = options.client.apiKey;
        }
        else if ('environment' in options) {
            apiKey = ApiKey[options.environment];
        }
        if (options.client && 'instance' in options.client) {
            this.amplitude = options.client.instance;
        }
        else if (apiKey) {
            this.amplitude = amplitude.createInstance();
            var configuration = (options.client && 'configuration' in options.client) ? options.client.configuration : {};
            return this.amplitude.init(apiKey, undefined, __assign(__assign({}, DefaultConfiguration), configuration));
        }
        else {
            console.error("ERROR: ampli.load() requires 'environment', 'client.apiKey', or 'client.instance'");
        }
        return getVoidPromiseResult();
    };
    /**
     * Identify a user and set user properties.
     *
     * @param userId The user's id.
     * @param options Optional event options.
     */
    Ampli.prototype.identify = function (userId, options) {
        if (!this.isInitializedAndEnabled()) {
            return getVoidPromiseResult();
        }
        if (userId) {
            options = __assign(__assign({}, options), { user_id: userId });
        }
        var amplitudeIdentify = new amplitude.Identify();
        return this.amplitude.identify(amplitudeIdentify, options);
    };
    /**
     * Flush the event.
     */
    Ampli.prototype.flush = function () {
        if (!this.isInitializedAndEnabled()) {
            return getVoidPromiseResult();
        }
        return this.amplitude.flush();
    };
    /**
     * Track event
     *
     * @param event The event to track.
     * @param options Optional event options.
     */
    Ampli.prototype.track = function (event, options) {
        if (!this.isInitializedAndEnabled()) {
            return getVoidPromiseResult();
        }
        return this.amplitude.track(event, undefined, options);
    };
    /**
     * All Wallets Page Viewed
     *
     * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/All%20Wallets%20Page%20Viewed)
     *
     * This event tracks when a user views the All Wallets page on Menu. Note: only available on Yoroi Mobile.
     *
     * @param options Amplitude event options.
     */
    Ampli.prototype.allWalletsPageViewed = function (options) {
        return this.track(new AllWalletsPageViewed(), options);
    };
    /**
     * Assets Page Viewed
     *
     * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Assets%20Page%20Viewed)
     *
     * This event tracks when a user views the Assets page. Note: only available on Yoroi Extension.
     *
     * @param options Amplitude event options.
     */
    Ampli.prototype.assetsPageViewed = function (options) {
        return this.track(new AssetsPageViewed(), options);
    };
    /**
     * Claim ADA Page Viewed
     *
     * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Claim%20ADA%20Page%20Viewed)
     *
     * This event tracks when a user views the page to claim Claim /Transfer ADA page in ExtensionEvent: Claim ADA Page Viewed
     *
     * Description: This event tracks when a user views the page to claim ADA tokens. It provides insights into the number of users who are interested in claiming ADA tokens and can be used to analyze user engagement and conversion rates on the claim page
     *
     * @param options Amplitude event options.
     */
    Ampli.prototype.claimAdaPageViewed = function (options) {
        return this.track(new ClaimAdaPageViewed(), options);
    };
    /**
     * Connector Page Viewed
     *
     * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Connector%20Page%20Viewed)
     *
     * This event tracks when a user views the dApp Connector page.
     *
     * @param options Amplitude event options.
     */
    Ampli.prototype.connectorPageViewed = function (options) {
        return this.track(new ConnectorPageViewed(), options);
    };
    /**
     * Create Wallet Details Step Viewed
     *
     * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Create%20Wallet%20Details%20Step%20Viewed)
     *
     * This event tracks when a user views the details \*\*step 4\*\* while creating a wallet. User will introduce: \* Wallet Name \* Password \* Repeat Password
     *
     * @param options Amplitude event options.
     */
    Ampli.prototype.createWalletDetailsStepViewed = function (options) {
        return this.track(new CreateWalletDetailsStepViewed(), options);
    };
    /**
     * Create Wallet Details Submitted
     *
     * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Create%20Wallet%20Details%20Submitted)
     *
     * This event captures the submission of the wallet creation on the last step of the flow (\*\*step 4\*\*).
     *
     * @param options Amplitude event options.
     */
    Ampli.prototype.createWalletDetailsSubmitted = function (options) {
        return this.track(new CreateWalletDetailsSubmitted(), options);
    };
    /**
     * Create Wallet Language Page Viewed
     *
     * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Create%20Wallet%20Language%20Page%20Viewed)
     *
     * This event tracks when a user views the page for selecting the language during the wallet creation process on the first time he launch Yoroi.
     *
     * @param options Amplitude event options.
     */
    Ampli.prototype.createWalletLanguagePageViewed = function (options) {
        return this.track(new CreateWalletLanguagePageViewed(), options);
    };
    /**
     * Create Wallet Learn Phrase Step Viewed
     *
     * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Create%20Wallet%20Learn%20Phrase%20Step%20Viewed)
     *
     * This event tracks when a user view the \*\*first step\*\* of learn about recovery prhase
     *
     * @param options Amplitude event options.
     */
    Ampli.prototype.createWalletLearnPhraseStepViewed = function (options) {
        return this.track(new CreateWalletLearnPhraseStepViewed(), options);
    };
    /**
     * Create Wallet Save Phrase Step Viewed
     *
     * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Create%20Wallet%20Save%20Phrase%20Step%20Viewed)
     *
     * This event tracks when a user views the \*\*second step\*\* to save their wallet recovery phrase during the wallet creation process
     *
     * @param options Amplitude event options.
     */
    Ampli.prototype.createWalletSavePhraseStepViewed = function (options) {
        return this.track(new CreateWalletSavePhraseStepViewed(), options);
    };
    /**
     * Create Wallet Select Method Page Viewed
     *
     * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Create%20Wallet%20Select%20Method%20Page%20Viewed)
     *
     * This event tracks when a user views the page where they can select the method to create a wallet:
     *
     * \* Create new wallet
     *
     * \* Restore existing wallet
     *
     * This event tracks when a user views the page where they can select the method to create a wallet\* Connect hardware wallet
     *
     * @param options Amplitude event options.
     */
    Ampli.prototype.createWalletSelectMethodPageViewed = function (options) {
        return this.track(new CreateWalletSelectMethodPageViewed(), options);
    };
    /**
     * Create Wallet Terms Page Viewed
     *
     * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Create%20Wallet%20Terms%20Page%20Viewed)
     *
     * This event tracks when a user views the terms of service agreement page on the creation wallet flow
     *
     * @param options Amplitude event options.
     */
    Ampli.prototype.createWalletTermsPageViewed = function (options) {
        return this.track(new CreateWalletTermsPageViewed(), options);
    };
    /**
     * Create Wallet Verify Phrase Step Viewed
     *
     * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Create%20Wallet%20Verify%20Phrase%20Step%20Viewed)
     *
     * This event tracks when a user views the verification phrase step while creating a wallet
     *
     * @param options Amplitude event options.
     */
    Ampli.prototype.createWalletVerifyPhraseStepViewed = function (options) {
        return this.track(new CreateWalletVerifyPhraseStepViewed(), options);
    };
    /**
     * Create Wallet Verify Phrase Word Selected
     *
     * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Create%20Wallet%20Verify%20Phrase%20Word%20Selected)
     *
     * This event tracks the selection of a specific word during the process of verifying the recovery phrase when creating a wallet
     *
     * @param properties The event's properties (e.g. recovery_word_order)
     * @param options Amplitude event options.
     */
    Ampli.prototype.createWalletVerifyPhraseWordSelected = function (properties, options) {
        return this.track(new CreateWalletVerifyPhraseWordSelected(properties), options);
    };
    /**
     * Dapp Popup Add Collateral Page Viewed
     *
     * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Dapp%20Popup%20Add%20Collateral%20Page%20Viewed)
     *
     * This event tracks when a user views the "Add Collateral" page in the Dapp Connector Popup
     *
     * @param options Amplitude event options.
     */
    Ampli.prototype.dappPopupAddCollateralPageViewed = function (options) {
        return this.track(new DappPopupAddCollateralPageViewed(), options);
    };
    /**
     * Dapp Popup Connect Wallet Page Viewed
     *
     * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Dapp%20Popup%20Connect%20Wallet%20Page%20Viewed)
     *
     * This event is triggered when the dapp connector popup is triggered and the user select the wallet that wants to connect.
     *
     * @param properties The event's properties (e.g. wallet_count)
     * @param options Amplitude event options.
     */
    Ampli.prototype.dappPopupConnectWalletPageViewed = function (properties, options) {
        return this.track(new DappPopupConnectWalletPageViewed(properties), options);
    };
    /**
     * Dapp Popup Connect Wallet Password Page Viewed
     *
     * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Dapp%20Popup%20Connect%20Wallet%20Password%20Page%20Viewed)
     *
     * This event tracks when a user attempts to connect their wallet by entering their password in the Dapp Connector popup
     *
     * @param options Amplitude event options.
     */
    Ampli.prototype.dappPopupConnectWalletPasswordPageViewed = function (options) {
        return this.track(new DappPopupConnectWalletPasswordPageViewed(), options);
    };
    /**
     * Dapp Popup Sign Transaction Page Viewed
     *
     * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Dapp%20Popup%20Sign%20Transaction%20Page%20Viewed)
     *
     * This event tracks when a user loads transaction screenThis event tracks when a user signs a transaction within a Dapp popup within a Dapp Connector Popup
     *
     * @param options Amplitude event options.
     */
    Ampli.prototype.dappPopupSignTransactionPageViewed = function (options) {
        return this.track(new DappPopupSignTransactionPageViewed(), options);
    };
    /**
     * Dapp Popup Sign Transaction Submitted
     *
     * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Dapp%20Popup%20Sign%20Transaction%20Submitted)
     *
     * This event tracks the click "confirm" button on submission of a sign transaction request within the Dapp Connector Popup This event tracks the submission of a sign transaction request within the Dapp Popup feature
     *
     * @param options Amplitude event options.
     */
    Ampli.prototype.dappPopupSignTransactionSubmitted = function (options) {
        return this.track(new DappPopupSignTransactionSubmitted(), options);
    };
    /**
     * NFT Gallery Details Image Viewed
     *
     * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/NFT%20Gallery%20Details%20Image%20Viewed)
     *
     * This event tracks when a user views the NFT image at full screen
     *
     * @param options Amplitude event options.
     */
    Ampli.prototype.nftGalleryDetailsImageViewed = function (options) {
        return this.track(new NftGalleryDetailsImageViewed(), options);
    };
    /**
     * NFT Gallery Details Navigation
     *
     * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/NFT%20Gallery%20Details%20Navigation)
     *
     * This event tracks when a use next and previous buttons to navigate across their NFTs. Note: available only on Extension.
     *
     * @param properties The event's properties (e.g. nft_navigation)
     * @param options Amplitude event options.
     */
    Ampli.prototype.nftGalleryDetailsNavigation = function (properties, options) {
        return this.track(new NftGalleryDetailsNavigation(properties), options);
    };
    /**
     * NFT Gallery Details Page Viewed
     *
     * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/NFT%20Gallery%20Details%20Page%20Viewed)
     *
     * This event tracks when a user views the details page of an NFT item.
     *
     * @param options Amplitude event options.
     */
    Ampli.prototype.nftGalleryDetailsPageViewed = function (options) {
        return this.track(new NftGalleryDetailsPageViewed(), options);
    };
    /**
     * NFT Gallery Details Tab
     *
     * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/NFT%20Gallery%20Details%20Tab)
     *
     * This event tracks user interactions with the tab in the NFT Gallery details page. It provides insights into how users engage with specific details of NFTs, such as descriptions, attributes, or additional information
     *
     * @param properties The event's properties (e.g. nft_tab)
     * @param options Amplitude event options.
     */
    Ampli.prototype.nftGalleryDetailsTab = function (properties, options) {
        return this.track(new NftGalleryDetailsTab(properties), options);
    };
    /**
     * NFT Gallery Grid View Selected
     *
     * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/NFT%20Gallery%20Grid%20View%20Selected)
     *
     * This event is triggered when a user selects the grid view option in the NFT gallery
     *
     * @param properties The event's properties (e.g. nft_grid_view)
     * @param options Amplitude event options.
     */
    Ampli.prototype.nftGalleryGridViewSelected = function (properties, options) {
        return this.track(new NftGalleryGridViewSelected(properties), options);
    };
    /**
     * NFT Gallery Page Viewed
     *
     * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/NFT%20Gallery%20Page%20Viewed)
     *
     * This event tracks when the NFT gallery it has loaded all nfts metadata
     *
     * @param properties The event's properties (e.g. nft_count)
     * @param options Amplitude event options.
     */
    Ampli.prototype.nftGalleryPageViewed = function (properties, options) {
        return this.track(new NftGalleryPageViewed(properties), options);
    };
    /**
     * NFT Gallery Search Activated
     *
     * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/NFT%20Gallery%20Search%20Activated)
     *
     * User activates and starts a search in the NFT gallery. Delay of 0.5 seconds.
     *
     * @param properties The event's properties (e.g. nft_count)
     * @param options Amplitude event options.
     */
    Ampli.prototype.nftGallerySearchActivated = function (properties, options) {
        return this.track(new NftGallerySearchActivated(properties), options);
    };
    /**
     * Receive Page Viewed
     *
     * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Receive%20Page%20Viewed)
     *
     * This event tracks when a user views the Receive page of the Wallet menu.
     *
     * @param options Amplitude event options.
     */
    Ampli.prototype.receivePageViewed = function (options) {
        return this.track(new ReceivePageViewed(), options);
    };
    /**
     * Restore Wallet Details Step Viewed
     *
     * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Restore%20Wallet%20Details%20Step%20Viewed)
     *
     * Event has no description in tracking plan.
     *
     * @param options Amplitude event options.
     */
    Ampli.prototype.restoreWalletDetailsStepViewed = function (options) {
        return this.track(new RestoreWalletDetailsStepViewed(), options);
    };
    /**
     * Restore Wallet Details Submitted
     *
     * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Restore%20Wallet%20Details%20Submitted)
     *
     * Event has no description in tracking plan.
     *
     * @param options Amplitude event options.
     */
    Ampli.prototype.restoreWalletDetailsSubmitted = function (options) {
        return this.track(new RestoreWalletDetailsSubmitted(), options);
    };
    /**
     * Restore Wallet Enter Phrase Step Status
     *
     * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Restore%20Wallet%20Enter%20Phrase%20Step%20Status)
     *
     * This events tracks the validation of the recovery phrase is verified, once the user insert the latest word. The output can be positive or negative and we do save that in he property: recovery*prhase*status
     *
     * @param properties The event's properties (e.g. recovery_prhase_status)
     * @param options Amplitude event options.
     */
    Ampli.prototype.restoreWalletEnterPhraseStepStatus = function (properties, options) {
        return this.track(new RestoreWalletEnterPhraseStepStatus(properties), options);
    };
    /**
     * Restore Wallet Enter Phrase Step Viewed
     *
     * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Restore%20Wallet%20Enter%20Phrase%20Step%20Viewed)
     *
     * This event tracks when a user views the step to enter the recovery phrase while restoring a wallet (**Step 2**).
     *
     * @param properties The event's properties (e.g. recovery_phrase_lenght)
     * @param options Amplitude event options.
     */
    Ampli.prototype.restoreWalletEnterPhraseStepViewed = function (properties, options) {
        return this.track(new RestoreWalletEnterPhraseStepViewed(properties), options);
    };
    /**
     * Restore Wallet Type Step Viewed
     *
     * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Restore%20Wallet%20Type%20Step%20Viewed)
     *
     * This event tracks when a user views the **first step after** selecting restore wallet, were they have to choose between:
     *
     * * 15-word recovery phrase
     *
     * * 24-word recovery phrase
     *
     * @param options Amplitude event options.
     */
    Ampli.prototype.restoreWalletTypeStepViewed = function (options) {
        return this.track(new RestoreWalletTypeStepViewed(), options);
    };
    /**
     * Send Initiated
     *
     * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Send%20Initiated)
     *
     * This event tracks when a user loads the default state of the first step of the multiasset transaction flow. That screen shows receiver address and optional memo
     *
     * @param options Amplitude event options.
     */
    Ampli.prototype.sendInitiated = function (options) {
        return this.track(new SendInitiated(), options);
    };
    /**
     * Send Select Asset Page Viewed
     *
     * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Send%20Select%20Asset%20Page%20Viewed)
     *
     * This event tracks when a user views the "Amount" page in the send flow.
     *
     * @param options Amplitude event options.
     */
    Ampli.prototype.sendSelectAssetPageViewed = function (options) {
        return this.track(new SendSelectAssetPageViewed(), options);
    };
    /**
     * Send Select Asset Selected
     *
     * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Send%20Select%20Asset%20Selected)
     *
     * When a user click "next" on the send flow: "Amount" step on extension / "Assets added" in mobile
     *
     * @param properties The event's properties (e.g. asset_count)
     * @param options Amplitude event options.
     */
    Ampli.prototype.sendSelectAssetSelected = function (properties, options) {
        return this.track(new SendSelectAssetSelected(properties), options);
    };
    /**
     * Send Select Asset Updated
     *
     * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Send%20Select%20Asset%20Updated)
     *
     * When an user update the tokens selection on "amount" step:
     *  \- Add
     *  \- Remove
     *  \- Updated
     *
     * @param properties The event's properties (e.g. asset_count)
     * @param options Amplitude event options.
     */
    Ampli.prototype.sendSelectAssetUpdated = function (properties, options) {
        return this.track(new SendSelectAssetUpdated(properties), options);
    };
    /**
     * Send Summary Page Viewed
     *
     * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Send%20Summary%20Page%20Viewed)
     *
     * When a user loads the Preview page (Could be called comfirmation too) on the send flow.
     *
     * @param properties The event's properties (e.g. asset_count)
     * @param options Amplitude event options.
     */
    Ampli.prototype.sendSummaryPageViewed = function (properties, options) {
        return this.track(new SendSummaryPageViewed(properties), options);
    };
    /**
     * Send Summary Submitted
     *
     * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Send%20Summary%20Submitted)
     *
     * When a user click "send" on the "Preview" step on the send flow.
     *
     * @param properties The event's properties (e.g. asset_count)
     * @param options Amplitude event options.
     */
    Ampli.prototype.sendSummarySubmitted = function (properties, options) {
        return this.track(new SendSummarySubmitted(properties), options);
    };
    /**
     * Settings Page Viewed
     *
     * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Settings%20Page%20Viewed)
     *
     * This event tracks when a user views the settings page within the application.
     *
     * @param options Amplitude event options.
     */
    Ampli.prototype.settingsPageViewed = function (options) {
        return this.track(new SettingsPageViewed(), options);
    };
    /**
     * Staking Center Page Viewed
     *
     * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Staking%20Center%20Page%20Viewed)
     *
     * This event tracks when a user views the Staking Center page on Staking menu.
     *
     * @param options Amplitude event options.
     */
    Ampli.prototype.stakingCenterPageViewed = function (options) {
        return this.track(new StakingCenterPageViewed(), options);
    };
    /**
     * Swap Asset From Changed
     *
     * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Swap%20Asset%20From%20Changed)
     *
     * When user changed the selected asset on "From" section
     *
     * Owner: Omar Rozak
     *
     * @param properties The event's properties (e.g. from_asset)
     * @param options Amplitude event options.
     */
    Ampli.prototype.swapAssetFromChanged = function (properties, options) {
        return this.track(new SwapAssetFromChanged(properties), options);
    };
    /**
     * Swap Asset To Changed
     *
     * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Swap%20Asset%20To%20Changed)
     *
     * When user changed the selected asset on "To" section
     *
     * Owner: Omar Rozak
     *
     * @param properties The event's properties (e.g. to_asset)
     * @param options Amplitude event options.
     */
    Ampli.prototype.swapAssetToChanged = function (properties, options) {
        return this.track(new SwapAssetToChanged(properties), options);
    };
    /**
     * Swap Cancelation Submitted
     *
     * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Swap%20Cancelation%20Submitted)
     *
     * When user sign a transaction to cancel the swap order
     *
     * Owner: Omar Rozak
     *
     * @param properties The event's properties (e.g. from_amount)
     * @param options Amplitude event options.
     */
    Ampli.prototype.swapCancelationSubmitted = function (properties, options) {
        return this.track(new SwapCancelationSubmitted(properties), options);
    };
    /**
     * Swap Confirmed  Page Viewed
     *
     * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Swap%20Confirmed%20%20Page%20Viewed)
     *
     * When the user opens Completed Order page
     *
     * Owner: Omar Rozak
     *
     * @param properties The event's properties (e.g. swap_tab)
     * @param options Amplitude event options.
     */
    Ampli.prototype.swapConfirmedPageViewed = function (properties, options) {
        return this.track(new SwapConfirmedPageViewed(properties), options);
    };
    /**
     * Swap Initiated
     *
     * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Swap%20Initiated)
     *
     * When user clicks on the swap feature and sees the default state of the swap.
     *
     * Owner: Omar Rozak
     *
     * @param properties The event's properties (e.g. from_asset)
     * @param options Amplitude event options.
     */
    Ampli.prototype.swapInitiated = function (properties, options) {
        return this.track(new SwapInitiated(properties), options);
    };
    /**
     * Swap Order Selected
     *
     * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Swap%20Order%20Selected)
     *
     * When user click on "swap" button after selecting asset from, entering the amount of asset form, selecting asset to, entering amount of asset to, and choosing a pool
     *
     * Owner: Omar Rozak
     *
     * @param properties The event's properties (e.g. from_amount)
     * @param options Amplitude event options.
     */
    Ampli.prototype.swapOrderSelected = function (properties, options) {
        return this.track(new SwapOrderSelected(properties), options);
    };
    /**
     * Swap Order Submitted
     *
     * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Swap%20Order%20Submitted)
     *
     * When user click confirm on the check out page, after entering their spending password
     *
     * Owner: Omar Rozak
     *
     * @param properties The event's properties (e.g. from_amount)
     * @param options Amplitude event options.
     */
    Ampli.prototype.swapOrderSubmitted = function (properties, options) {
        return this.track(new SwapOrderSubmitted(properties), options);
    };
    /**
     * Swap Pool Changed
     *
     * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Swap%20Pool%20Changed)
     *
     * When user clicked a different pool on the "Select Pool" page
     *
     * Owner: Sergio SF
     *
     * @param options Amplitude event options.
     */
    Ampli.prototype.swapPoolChanged = function (options) {
        return this.track(new SwapPoolChanged(), options);
    };
    /**
     * Swap Slippage Changed
     *
     * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Swap%20Slippage%20Changed)
     *
     * When user click apply on the swap setting page
     *
     * Owner: Omar Rozak
     *
     * @param properties The event's properties (e.g. slippage_tolerance)
     * @param options Amplitude event options.
     */
    Ampli.prototype.swapSlippageChanged = function (properties, options) {
        return this.track(new SwapSlippageChanged(properties), options);
    };
    /**
     * Transactions Page Viewed
     *
     * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Transactions%20Page%20Viewed)
     *
     * This event tracks when a user views the transactions page within the wallet.
     *
     * @param options Amplitude event options.
     */
    Ampli.prototype.transactionsPageViewed = function (options) {
        return this.track(new TransactionsPageViewed(), options);
    };
    /**
     * Voting Page Viewed
     *
     * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Voting%20Page%20Viewed)
     *
     * This event tracks when a user views the Voting page.
     *
     * @param options Amplitude event options.
     */
    Ampli.prototype.votingPageViewed = function (options) {
        return this.track(new VotingPageViewed(), options);
    };
    /**
     * Wallet Page Viewed
     *
     * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Wallet%20Page%20Viewed)
     *
     * ThThis event tracks when a user views the wallet page. Wallet page is the deffault page when the user logs in to the app (Once the initial setup is done)
     *
     * @param options Amplitude event options.
     */
    Ampli.prototype.walletPageViewed = function (options) {
        return this.track(new WalletPageViewed(), options);
    };
    return Ampli;
}());
export { Ampli };
export var ampli = new Ampli();
