/**
 * Flowtype definitions for index
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.21.0
 * @flow
 */
class BaseEvent {}

import * as amplitude from "@amplitude/analytics-browser";
export type Environment = "production" | "development";
declare export var ApiKey: { [key: Environment]: string };
/**
 * Default Amplitude configuration options. Contains tracking plan information.
 */
declare export var DefaultConfiguration: BrowserOptions;
export type LoadOptionsBase = {|
  disabled?: boolean,
|};
export type LoadOptionsWithEnvironment = {|
  ...LoadOptionsBase,
  ...{|
    environment: Environment,
    client?: {|
      configuration?: BrowserOptions,
    |},
  |},
|};
export type LoadOptionsWithApiKey = {|
  ...LoadOptionsBase,
  ...{|
    client: {|
      apiKey: string,
      configuration?: BrowserOptions,
    |},
  |},
|};
export type LoadOptionsWithClientInstance = {|
  ...LoadOptionsBase,
  ...{|
    client: {|
      instance: BrowserClient,
    |},
  |},
|};
export type LoadOptions =
  | LoadOptionsWithEnvironment
  | LoadOptionsWithApiKey
  | LoadOptionsWithClientInstance;
export type CreateWalletVerifyPhraseWordSelectedProperties = {|
  recovery_word_order?: any,
|};
export type DappPopupConnectWalletPageViewedProperties = {|
  /**
   * The total number of wallets that a user have.
   *  In case of not having any wallet, save 0 as the value.
   *
   * | Rule | Value |
   * |---|---|
   * | Type | number |
   */
  wallet_count: number,
|};
export type GovernanceConfirmTransactionPageViewedProperties = {|
  /**
   * | Rule | Value |
   * |---|---|
   * | Enum Values | Delegate, Abstain, No Confidence |
   */
  governance_selection: "Delegate" | "Abstain" | "No Confidence",
|};
export type GovernanceTransactionSuccessPageViewedProperties = {|
  /**
   * | Rule | Value |
   * |---|---|
   * | Enum Values | Delegate, Abstain, No Confidence |
   */
  governance_selection: "Delegate" | "Abstain" | "No Confidence",
|};
export type NetworkSelectedProperties = {|
  /**
   * Current network
   *
   * | Rule | Value |
   * |---|---|
   * | Enum Values | preprod, preview, mainnet, sancho |
   */
  from_network: "preprod" | "preview" | "mainnet" | "sancho",

  /**
   * Network selected
   *
   * | Rule | Value |
   * |---|---|
   * | Enum Values | preprod, preview, mainnet, sancho |
   */
  to_network: "preprod" | "preview" | "mainnet" | "sancho",
|};
export type NftGalleryDetailsNavigationProperties = {|
  /**
   * Describe the navigation buttons on the NFT details view
   *
   * | Rule | Value |
   * |---|---|
   * | Enum Values | Next, Previous |
   */
  nft_navigation: "Next" | "Previous",
|};
export type NftGalleryDetailsTabProperties = {|
  /**
   * | Rule | Value |
   * |---|---|
   * | Enum Values | Overview, Metadata |
   */
  nft_tab: "Overview" | "Metadata",
|};
export type NftGalleryGridViewSelectedProperties = {|
  /**
   * Describe what type of grid is using the NFT gallery
   *
   * | Rule | Value |
   * |---|---|
   * | Enum Values | 4_rows, 6_rows |
   */
  nft_grid_view?: "4_rows" | "6_rows",
|};
export type NftGalleryPageViewedProperties = {|
  /**
   * The total number of NFT's that an user have
   *
   * | Rule | Value |
   * |---|---|
   * | Type | integer |
   */
  nft_count: number,
|};
export type NftGallerySearchActivatedProperties = {|
  /**
   * The total number of NFT's that an user have
   *
   * | Rule | Value |
   * |---|---|
   * | Type | integer |
   */
  nft_count: number,

  /**
   * What user is looking to search on NFT gallery page
   */
  nft_search_term: string,
|};
export type PortfolioTokenDetailsProperties = {|
  /**
   * It show what tab from the Token details the user is.
   *
   * | Rule | Value |
   * |---|---|
   * | Enum Values | Performance, Overview, Transactions |
   */
  token_details_tab: "Performance" | "Overview" | "Transactions",
|};
export type PortfolioTokensListPageViewedProperties = {|
  /**
   * It shows in what tab are we in the movile version of the Token list
   *
   * | Rule | Value |
   * |---|---|
   * | Enum Values | Wallet Token, Dapps Token |
   */
  tokens_tab: "Wallet Token" | "Dapps Token",
|};
export type PortfolioTokensListSearchActivatedProperties = {|
  /**
   * What a user is looking to search.
   */
  search_term: string,
|};
export type ReceiveAmountGeneratedPageViewedProperties = {|
  /**
   * The amount of ADA that the user will be exchanging.
   *
   * | Rule | Value |
   * |---|---|
   * | Type | number |
   */
  ada_amount: number,
|};
export type ReceiveCopyAddressClickedProperties = {|
  /**
   * Indicates the location of cop CTA
   *
   * | Rule | Value |
   * |---|---|
   * | Enum Values | CTA Copy Address, Tap Address Details, Long Press wallet Address |
   */
  copy_address_location:
    | "CTA Copy Address"
    | "Tap Address Details"
    | "Long Press wallet Address",
|};
export type RestoreWalletEnterPhraseStepStatusProperties = {|
  recovery_prhase_status: boolean,
|};
export type RestoreWalletEnterPhraseStepViewedProperties = {|
  /**
   * | Rule | Value |
   * |---|---|
   * | Enum Values | 15, 24 |
   */
  recovery_phrase_lenght: "15" | "24",
|};
export type SendSelectAssetSelectedProperties = {|
  /**
   * Total numbers of assets to be send
   *
   * | Rule | Value |
   * |---|---|
   * | Type | number |
   */
  asset_count: number,

  /**
   * ```
   * nfts: [
   *      {
   *         nft_name: Bored Ape,
   *
   *       },
   *       {
   *         nft_name: Crypto Cats,
   *        }
   * ]
   * ```
   */
  nfts?: any[],

  /**
   * ```
   * Tokens: [
   *      {
   *         token_name: Ado,
   *         token_amount: '133',
   *       },
   *       {
   *         token_name: Ada,
   *         token_amount: '5',
   *        }
   * ]
   * ```
   */
  tokens?: any[],
|};
export type SendSelectAssetUpdatedProperties = {|
  /**
   * | Rule | Value |
   * |---|---|
   * | Type | number |
   */
  asset_count: number,

  /**
   * ```
   * nfts: [
   *      {
   *         nft_name: Bored Ape,
   *
   *       },
   *       {
   *         nft_name: Crypto Cats,
   *        }
   * ]
   * ```
   */
  nfts?: any[],

  /**
   * ```
   * Tokens: [
   *      {
   *         token_name: Ado,
   *         token_amount: '133',
   *       },
   *       {
   *         token_name: Ada,
   *         token_amount: '5',
   *        }
   * ]
   * ```
   */
  tokens?: any[],
|};
export type SendSummaryPageViewedProperties = {|
  /**
   * | Rule | Value |
   * |---|---|
   * | Type | number |
   */
  asset_count: number,

  /**
   * ```
   * nfts: [
   *      {
   *         nft_name: Bored Ape,
   *
   *       },
   *       {
   *         nft_name: Crypto Cats,
   *        }
   * ]
   * ```
   */
  nfts?: any[],

  /**
   * ```
   * Tokens: [
   *      {
   *         token_name: Ado,
   *         token_amount: '133',
   *       },
   *       {
   *         token_name: Ada,
   *         token_amount: '5',
   *        }
   * ]
   * ```
   */
  tokens?: any[],
|};
export type SendSummarySubmittedProperties = {|
  /**
   * | Rule | Value |
   * |---|---|
   * | Type | number |
   */
  asset_count: number,

  /**
   * ```
   * nfts: [
   *      {
   *         nft_name: Bored Ape,
   *
   *       },
   *       {
   *         nft_name: Crypto Cats,
   *        }
   * ]
   * ```
   */
  nfts?: any[],

  /**
   * ```
   * Tokens: [
   *      {
   *         token_name: Ado,
   *         token_amount: '133',
   *       },
   *       {
   *         token_name: Ada,
   *         token_amount: '5',
   *        }
   * ]
   * ```
   */
  tokens?: any[],
|};
export type SwapAssetFromChangedProperties = {|
  /**
   * Displaying the asset that the user chose to trade with.
   *
   * Asset Name Asset Ticker Policy ID
   *  \[
   *   {
   *     asset_name: 'ADA',
   *     asset_ticker: 'ADA',
   *     policy_id: '123456789'
   *   },
   * \]
   */
  from_asset: any[],
|};
export type SwapAssetToChangedProperties = {|
  /**
   * Displaying the asset that the user chose to trade to
   *
   * Asset Name
   * Asset Ticker
   * Policy ID
   */
  to_asset: any[],
|};
export type SwapCancelationSubmittedProperties = {|
  /**
   * The amount of asset that the user is swapping from
   *
   * | Rule | Value |
   * |---|---|
   * | Type | number |
   */
  from_amount: number,

  /**
   * Displaying the asset that the user chose to trade with.
   *
   * Asset Name Asset Ticker Policy ID
   *  \[
   *   {
   *     asset_name: 'ADA',
   *     asset_ticker: 'ADA',
   *     policy_id: '123456789'
   *   },
   * \]
   *
   * | Rule | Value |
   * |---|---|
   * | Unique Items | null |
   */
  from_asset: any[],

  /**
   * The name of liquidity pool used for this swap transaction
   */
  pool_source: string,

  /**
   * The amount of asset that the user is swapping to
   *
   * | Rule | Value |
   * |---|---|
   * | Type | number |
   */
  to_amount: number,

  /**
   * Displaying the asset that the user chose to trade to
   *
   * Asset Name
   * Asset Ticker
   * Policy ID
   *
   * | Rule | Value |
   * |---|---|
   * | Unique Items | null |
   */
  to_asset: any[],
|};
export type SwapConfirmedPageViewedProperties = {|
  /**
   * Define the tab that is active in the selected page
   *
   * | Rule | Value |
   * |---|---|
   * | Enum Values | Open Orders, Completed Orders |
   */
  swap_tab: "Open Orders" | "Completed Orders",
|};
export type SwapInitiatedProperties = {|
  /**
   * Displaying the asset that the user chose to trade with.
   *
   * Asset Name Asset Ticker Policy ID
   *  \[
   *   {
   *     asset_name: 'ADA',
   *     asset_ticker: 'ADA',
   *     policy_id: '123456789'
   *   },
   * \]
   *
   * | Rule | Value |
   * |---|---|
   * | Unique Items | null |
   */
  from_asset: any[],

  /**
   * The type of order selected on a given transaction
   *
   * | Rule | Value |
   * |---|---|
   * | Enum Values | limit, market |
   */
  order_type: "limit" | "market",

  /**
   * The default slippage tolerance is 1%, but users are free to change the slippage.
   *
   * | Rule | Value |
   * |---|---|
   * | Type | number |
   */
  slippage_tolerance: number,

  /**
   * Displaying the asset that the user chose to trade to
   *
   * Asset Name
   * Asset Ticker
   * Policy ID
   *
   * | Rule | Value |
   * |---|---|
   * | Unique Items | null |
   */
  to_asset: any[],
|};
export type SwapOrderSelectedProperties = {|
  /**
   * The amount of asset that the user is swapping from
   */
  from_amount: string,

  /**
   * Displaying the asset that the user chose to trade with.
   *
   * Asset Name Asset Ticker Policy ID
   *  \[
   *   {
   *     asset_name: 'ADA',
   *     asset_ticker: 'ADA',
   *     policy_id: '123456789'
   *   },
   * \]
   */
  from_asset: any[],

  /**
   * The type of order selected on a given transaction
   *
   * | Rule | Value |
   * |---|---|
   * | Enum Values | limit, market |
   */
  order_type?: "limit" | "market",

  /**
   * The name of liquidity pool used for this swap transaction
   */
  pool_source: string,

  /**
   * The default slippage tolerance is 1%, but users are free to change the slippage.
   *
   * | Rule | Value |
   * |---|---|
   * | Type | number |
   */
  slippage_tolerance?: number,

  /**
   * The amount of fees charged on the transaction. The value is in ADA.
   *
   * | Rule | Value |
   * |---|---|
   * | Type | number |
   */
  swap_fees?: number,

  /**
   * The amount of asset that the user is swapping to
   */
  to_amount: string,

  /**
   * Displaying the asset that the user chose to trade to
   *
   * Asset Name
   * Asset Ticker
   * Policy ID
   */
  to_asset: any[],
|};
export type SwapOrderSubmittedProperties = {|
  /**
   * The amount of asset that the user is swapping from
   */
  from_amount: string,

  /**
   * Displaying the asset that the user chose to trade with.
   *
   * Asset Name Asset Ticker Policy ID
   *  \[
   *   {
   *     asset_name: 'ADA',
   *     asset_ticker: 'ADA',
   *     policy_id: '123456789'
   *   },
   * \]
   */
  from_asset: any[],

  /**
   * The type of order selected on a given transaction
   *
   * | Rule | Value |
   * |---|---|
   * | Enum Values | limit, market |
   */
  order_type?: "limit" | "market",

  /**
   * The name of liquidity pool used for this swap transaction
   */
  pool_source: string,

  /**
   * The default slippage tolerance is 1%, but users are free to change the slippage.
   *
   * | Rule | Value |
   * |---|---|
   * | Type | number |
   */
  slippage_tolerance?: number,

  /**
   * The amount of fees charged on the transaction. The value is in ADA.
   *
   * | Rule | Value |
   * |---|---|
   * | Type | number |
   */
  swap_fees?: number,

  /**
   * The amount of asset that the user is swapping to
   */
  to_amount: string,

  /**
   * Displaying the asset that the user chose to trade to
   *
   * Asset Name
   * Asset Ticker
   * Policy ID
   */
  to_asset: any[],
|};
export type SwapSlippageChangedProperties = {|
  /**
   * The default slippage tolerance is 1%, but users are free to change the slippage.
   *
   * | Rule | Value |
   * |---|---|
   * | Type | number |
   */
  slippage_tolerance: number,
|};
export type SendProperties = {|
  /**
   * Total numbers of assets to be send
   *
   * | Rule | Value |
   * |---|---|
   * | Type | number |
   */
  asset_count: number,

  /**
   * ```
   * nfts: [
   *      {
   *         nft_name: Bored Ape,
   *
   *       },
   *       {
   *         nft_name: Crypto Cats,
   *        }
   * ]
   * ```
   */
  nfts?: any[],

  /**
   * ```
   * Tokens: [
   *      {
   *         token_name: Ado,
   *         token_amount: '133',
   *       },
   *       {
   *         token_name: Ada,
   *         token_amount: '5',
   *        }
   * ]
   * ```
   */
  tokens?: any[],
|};
export type SwapProperties = {|
  /**
   * The amount of asset that the user is swapping from
   */
  from_amount: string,

  /**
   * Displaying the asset that the user chose to trade with.
   *
   * Asset Name Asset Ticker Policy ID
   *  \[
   *   {
   *     asset_name: 'ADA',
   *     asset_ticker: 'ADA',
   *     policy_id: '123456789'
   *   },
   * \]
   */
  from_asset: any[],

  /**
   * The type of order selected on a given transaction
   *
   * | Rule | Value |
   * |---|---|
   * | Enum Values | limit, market |
   */
  order_type?: "limit" | "market",

  /**
   * The name of liquidity pool used for this swap transaction
   */
  pool_source: string,

  /**
   * The default slippage tolerance is 1%, but users are free to change the slippage.
   *
   * | Rule | Value |
   * |---|---|
   * | Type | number |
   */
  slippage_tolerance?: number,

  /**
   * The amount of fees charged on the transaction. The value is in ADA.
   *
   * | Rule | Value |
   * |---|---|
   * | Type | number |
   */
  swap_fees?: number,

  /**
   * The amount of asset that the user is swapping to
   */
  to_amount: string,

  /**
   * Displaying the asset that the user chose to trade to
   *
   * Asset Name
   * Asset Ticker
   * Policy ID
   */
  to_asset: any[],
|};
declare export class AllWalletsPageViewed mixins BaseEvent {
  event_type: string;
}
declare export class AssetsPageViewed mixins BaseEvent {
  event_type: string;
}
declare export class ClaimAdaPageViewed mixins BaseEvent {
  event_type: string;
}
declare export class ConnectorPageViewed mixins BaseEvent {
  event_type: string;
}
declare export class CreateWalletDetailsSettled mixins BaseEvent {
  event_type: string;
}
declare export class CreateWalletDetailsStepViewed mixins BaseEvent {
  event_type: string;
}
declare export class CreateWalletDetailsSubmitted mixins BaseEvent {
  event_type: string;
}
declare export class CreateWalletLanguagePageViewed mixins BaseEvent {
  event_type: string;
}
declare export class CreateWalletLearnPhraseStepViewed mixins BaseEvent {
  event_type: string;
}
declare export class CreateWalletSavePhraseStepViewed mixins BaseEvent {
  event_type: string;
}
declare export class CreateWalletSelectMethodPageViewed mixins BaseEvent {
  event_type: string;
}
declare export class CreateWalletTermsPageViewed mixins BaseEvent {
  event_type: string;
}
declare export class CreateWalletVerifyPhraseStepViewed mixins BaseEvent {
  event_type: string;
}
declare export class CreateWalletVerifyPhraseWordSelected mixins BaseEvent {
  event_properties?: CreateWalletVerifyPhraseWordSelectedProperties;
  event_type: string;
  constructor(
    event_properties?: CreateWalletVerifyPhraseWordSelectedProperties
  ): this;
}
declare export class DappPopupAddCollateralPageViewed mixins BaseEvent {
  event_type: string;
}
declare export class DappPopupConnectWalletPageViewed mixins BaseEvent {
  event_properties: DappPopupConnectWalletPageViewedProperties;
  event_type: string;
  constructor(
    event_properties: DappPopupConnectWalletPageViewedProperties
  ): this;
}
declare export class DappPopupConnectWalletPasswordPageViewed mixins BaseEvent {
  event_type: string;
}
declare export class DappPopupSignTransactionPageViewed mixins BaseEvent {
  event_type: string;
}
declare export class DappPopupSignTransactionSubmitted mixins BaseEvent {
  event_type: string;
}
declare export class GovernanceChooseDrepPageViewed mixins BaseEvent {
  event_type: string;
}
declare export class GovernanceConfirmTransactionPageViewed mixins BaseEvent {
  event_properties: GovernanceConfirmTransactionPageViewedProperties;
  event_type: string;
  constructor(
    event_properties: GovernanceConfirmTransactionPageViewedProperties
  ): this;
}
declare export class GovernanceDashboardPageViewed mixins BaseEvent {
  event_type: string;
}
declare export class GovernanceTransactionSuccessPageViewed mixins BaseEvent {
  event_properties: GovernanceTransactionSuccessPageViewedProperties;
  event_type: string;
  constructor(
    event_properties: GovernanceTransactionSuccessPageViewedProperties
  ): this;
}
declare export class NetworkSelected mixins BaseEvent {
  event_properties: NetworkSelectedProperties;
  event_type: string;
  constructor(event_properties: NetworkSelectedProperties): this;
}
declare export class NftGalleryDetailsImageViewed mixins BaseEvent {
  event_type: string;
}
declare export class NftGalleryDetailsNavigation mixins BaseEvent {
  event_properties: NftGalleryDetailsNavigationProperties;
  event_type: string;
  constructor(event_properties: NftGalleryDetailsNavigationProperties): this;
}
declare export class NftGalleryDetailsPageViewed mixins BaseEvent {
  event_type: string;
}
declare export class NftGalleryDetailsTab mixins BaseEvent {
  event_properties: NftGalleryDetailsTabProperties;
  event_type: string;
  constructor(event_properties: NftGalleryDetailsTabProperties): this;
}
declare export class NftGalleryGridViewSelected mixins BaseEvent {
  event_properties?: NftGalleryGridViewSelectedProperties;
  event_type: string;
  constructor(event_properties?: NftGalleryGridViewSelectedProperties): this;
}
declare export class NftGalleryPageViewed mixins BaseEvent {
  event_properties: NftGalleryPageViewedProperties;
  event_type: string;
  constructor(event_properties: NftGalleryPageViewedProperties): this;
}
declare export class NftGallerySearchActivated mixins BaseEvent {
  event_properties: NftGallerySearchActivatedProperties;
  event_type: string;
  constructor(event_properties: NftGallerySearchActivatedProperties): this;
}
declare export class PortfolioTokenDetails mixins BaseEvent {
  event_properties: PortfolioTokenDetailsProperties;
  event_type: string;
  constructor(event_properties: PortfolioTokenDetailsProperties): this;
}
declare export class PortfolioTokensListPageViewed mixins BaseEvent {
  event_properties: PortfolioTokensListPageViewedProperties;
  event_type: string;
  constructor(event_properties: PortfolioTokensListPageViewedProperties): this;
}
declare export class PortfolioTokensListSearchActivated mixins BaseEvent {
  event_properties: PortfolioTokensListSearchActivatedProperties;
  event_type: string;
  constructor(
    event_properties: PortfolioTokensListSearchActivatedProperties
  ): this;
}
declare export class ReceiveAmountGeneratedPageViewed mixins BaseEvent {
  event_properties: ReceiveAmountGeneratedPageViewedProperties;
  event_type: string;
  constructor(
    event_properties: ReceiveAmountGeneratedPageViewedProperties
  ): this;
}
declare export class ReceiveAmountPageViewed mixins BaseEvent {
  event_type: string;
}
declare export class ReceiveCopyAddressClicked mixins BaseEvent {
  event_properties: ReceiveCopyAddressClickedProperties;
  event_type: string;
  constructor(event_properties: ReceiveCopyAddressClickedProperties): this;
}
declare export class ReceiveGenerateNewAddressClicked mixins BaseEvent {
  event_type: string;
}
declare export class ReceivePageListViewed mixins BaseEvent {
  event_type: string;
}
declare export class ReceivePageViewed mixins BaseEvent {
  event_type: string;
}
declare export class ReceiveShareAddressClicked mixins BaseEvent {
  event_type: string;
}
declare export class RestoreWalletDetailsSettled mixins BaseEvent {
  event_type: string;
}
declare export class RestoreWalletDetailsStepViewed mixins BaseEvent {
  event_type: string;
}
declare export class RestoreWalletEnterPhraseStepStatus mixins BaseEvent {
  event_properties: RestoreWalletEnterPhraseStepStatusProperties;
  event_type: string;
  constructor(
    event_properties: RestoreWalletEnterPhraseStepStatusProperties
  ): this;
}
declare export class RestoreWalletEnterPhraseStepViewed mixins BaseEvent {
  event_properties: RestoreWalletEnterPhraseStepViewedProperties;
  event_type: string;
  constructor(
    event_properties: RestoreWalletEnterPhraseStepViewedProperties
  ): this;
}
declare export class RestoreWalletTypeStepViewed mixins BaseEvent {
  event_type: string;
}
declare export class SendInitiated mixins BaseEvent {
  event_type: string;
}
declare export class SendSelectAssetPageViewed mixins BaseEvent {
  event_type: string;
}
declare export class SendSelectAssetSelected mixins BaseEvent {
  event_properties: SendSelectAssetSelectedProperties;
  event_type: string;
  constructor(event_properties: SendSelectAssetSelectedProperties): this;
}
declare export class SendSelectAssetUpdated mixins BaseEvent {
  event_properties: SendSelectAssetUpdatedProperties;
  event_type: string;
  constructor(event_properties: SendSelectAssetUpdatedProperties): this;
}
declare export class SendSummaryPageViewed mixins BaseEvent {
  event_properties: SendSummaryPageViewedProperties;
  event_type: string;
  constructor(event_properties: SendSummaryPageViewedProperties): this;
}
declare export class SendSummarySubmitted mixins BaseEvent {
  event_properties: SendSummarySubmittedProperties;
  event_type: string;
  constructor(event_properties: SendSummarySubmittedProperties): this;
}
declare export class SettingsPageViewed mixins BaseEvent {
  event_type: string;
}
declare export class StakingCenterPageViewed mixins BaseEvent {
  event_type: string;
}
declare export class SwapAssetFromChanged mixins BaseEvent {
  event_properties: SwapAssetFromChangedProperties;
  event_type: string;
  constructor(event_properties: SwapAssetFromChangedProperties): this;
}
declare export class SwapAssetToChanged mixins BaseEvent {
  event_properties: SwapAssetToChangedProperties;
  event_type: string;
  constructor(event_properties: SwapAssetToChangedProperties): this;
}
declare export class SwapCancelationSubmitted mixins BaseEvent {
  event_properties: SwapCancelationSubmittedProperties;
  event_type: string;
  constructor(event_properties: SwapCancelationSubmittedProperties): this;
}
declare export class SwapConfirmedPageViewed mixins BaseEvent {
  event_properties: SwapConfirmedPageViewedProperties;
  event_type: string;
  constructor(event_properties: SwapConfirmedPageViewedProperties): this;
}
declare export class SwapInitiated mixins BaseEvent {
  event_properties: SwapInitiatedProperties;
  event_type: string;
  constructor(event_properties: SwapInitiatedProperties): this;
}
declare export class SwapOrderSelected mixins BaseEvent {
  event_properties: SwapOrderSelectedProperties;
  event_type: string;
  constructor(event_properties: SwapOrderSelectedProperties): this;
}
declare export class SwapOrderSubmitted mixins BaseEvent {
  event_properties: SwapOrderSubmittedProperties;
  event_type: string;
  constructor(event_properties: SwapOrderSubmittedProperties): this;
}
declare export class SwapPoolChanged mixins BaseEvent {
  event_type: string;
}
declare export class SwapSlippageChanged mixins BaseEvent {
  event_properties: SwapSlippageChangedProperties;
  event_type: string;
  constructor(event_properties: SwapSlippageChangedProperties): this;
}
declare export class TransactionsPageViewed mixins BaseEvent {
  event_type: string;
}
declare export class VotingPageViewed mixins BaseEvent {
  event_type: string;
}
declare export class WalletPageViewed mixins BaseEvent {
  event_type: string;
}
export type PromiseResult<T> = {|
  promise: Promise<T | void>,
|};
declare export class Ampli {
  client: BrowserClient;
  isLoaded: boolean;

  /**
   * Initialize the Ampli SDK. Call once when your application starts.
   * @param options Configuration options to initialize the Ampli SDK with.
   */
  load(options: LoadOptions): PromiseResult<void>;

  /**
   * Identify a user and set user properties.
   * @param userId The user's id.
   * @param options Optional event options.
   */
  identify(
    userId: string | void,
    options?: EventOptions
  ): PromiseResult<Result>;

  /**
   * Flush the event.
   */
  flush(): PromiseResult<Result>;

  /**
   * Track event
   * @param event The event to track.
   * @param options Optional event options.
   */
  track(event: Event, options?: EventOptions): PromiseResult<Result>;

  /**
   * All Wallets Page Viewed
   *
   * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/All%20Wallets%20Page%20Viewed)
   *
   * This event tracks when a user views the All Wallets page on Menu. Note: only available on Yoroi Mobile.
   * @param options Amplitude event options.
   */
  allWalletsPageViewed(
    options?: EventOptions
  ): PromiseResult<any>;

  /**
   * Assets Page Viewed
   *
   * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Assets%20Page%20Viewed)
   *
   * This event tracks when a user views the Assets page.
   *  On mobile  is available on the wallet page (First item from main menu) in the assets tab.
   * @param options Amplitude event options.
   */
  assetsPageViewed(
    options?: EventOptions
  ): PromiseResult<any>;

  /**
   * Claim ADA Page Viewed
   *
   * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Claim%20ADA%20Page%20Viewed)
   *
   * This event tracks when a user views the page to claim Claim /Transfer ADA page in Extension.
   *
   * You can find that page under Staking section.
   * @param options Amplitude event options.
   */
  claimAdaPageViewed(
    options?: EventOptions
  ): PromiseResult<any>;

  /**
   * Connector Page Viewed
   *
   * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Connector%20Page%20Viewed)
   *
   * This event tracks when a user views the dApp Connector page.
   * @param options Amplitude event options.
   */
  connectorPageViewed(
    options?: EventOptions
  ): PromiseResult<any>;

  /**
   * Create Wallet Details Settled
   *
   * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Create%20Wallet%20Details%20Settled)
   *
   * When the wallet is created correctly. This event signifies the completion of the process of setting up wallet details during the creation of a new wallet
   * @param options Amplitude event options.
   */
  createWalletDetailsSettled(
    options?: EventOptions
  ): PromiseResult<any>;

  /**
   * Create Wallet Details Step Viewed
   *
   * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Create%20Wallet%20Details%20Step%20Viewed)
   *
   * This event tracks when a user views the details \*\*step 4\*\* while creating a wallet. User will introduce: \* Wallet Name \* Password \* Repeat Password
   * @param options Amplitude event options.
   */
  createWalletDetailsStepViewed(
    options?: EventOptions
  ): PromiseResult<any>;

  /**
   * Create Wallet Details Submitted
   *
   * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Create%20Wallet%20Details%20Submitted)
   *
   * This event captures the submission of the wallet creation on the last step of the flow (\*\*step 4\*\*).
   * @param options Amplitude event options.
   */
  createWalletDetailsSubmitted(
    options?: EventOptions
  ): PromiseResult<any>;

  /**
   * Create Wallet Language Page Viewed
   *
   * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Create%20Wallet%20Language%20Page%20Viewed)
   *
   * This event tracks when a user views the page for selecting the language during the wallet creation process on the first time he launch Yoroi.
   * @param options Amplitude event options.
   */
  createWalletLanguagePageViewed(
    options?: EventOptions
  ): PromiseResult<any>;

  /**
   * Create Wallet Learn Phrase Step Viewed
   *
   * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Create%20Wallet%20Learn%20Phrase%20Step%20Viewed)
   *
   * This event tracks when a user view the \*\*first step\*\* of learn about recovery prhase
   * @param options Amplitude event options.
   */
  createWalletLearnPhraseStepViewed(
    options?: EventOptions
  ): PromiseResult<any>;

  /**
   * Create Wallet Save Phrase Step Viewed
   *
   * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Create%20Wallet%20Save%20Phrase%20Step%20Viewed)
   *
   * This event tracks when a user views the \*\*second step\*\* to save their wallet recovery phrase during the wallet creation process
   * @param options Amplitude event options.
   */
  createWalletSavePhraseStepViewed(
    options?: EventOptions
  ): PromiseResult<any>;

  /**
   * Create Wallet Select Method Page Viewed
   *
   * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Create%20Wallet%20Select%20Method%20Page%20Viewed)
   *
   * This event tracks when a user views the page where they can select the method to create a wallet:
   *
   * \* Create new wallet
   *
   * \* Restore existing wallet
   *
   * This event tracks when a user views the page where they can select the method to create a wallet\* Connect hardware wallet
   * @param options Amplitude event options.
   */
  createWalletSelectMethodPageViewed(
    options?: EventOptions
  ): PromiseResult<any>;

  /**
   * Create Wallet Terms Page Viewed
   *
   * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Create%20Wallet%20Terms%20Page%20Viewed)
   *
   * This event tracks when a user views the terms of service agreement page on the creation wallet flow
   * @param options Amplitude event options.
   */
  createWalletTermsPageViewed(
    options?: EventOptions
  ): PromiseResult<any>;

  /**
   * Create Wallet Verify Phrase Step Viewed
   *
   * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Create%20Wallet%20Verify%20Phrase%20Step%20Viewed)
   *
   * This event tracks when a user views the verification phrase step while creating a wallet
   * @param options Amplitude event options.
   */
  createWalletVerifyPhraseStepViewed(
    options?: EventOptions
  ): PromiseResult<any>;

  /**
   * Create Wallet Verify Phrase Word Selected
   *
   * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Create%20Wallet%20Verify%20Phrase%20Word%20Selected)
   *
   * This event tracks the selection of a specific word during the process of verifying the recovery phrase when creating a wallet
   * @param properties The event's properties (e.g. recovery_word_order)
   * @param options Amplitude event options.
   */
  createWalletVerifyPhraseWordSelected(
    properties?: CreateWalletVerifyPhraseWordSelectedProperties,
    options?: EventOptions
  ): PromiseResult<any>;

  /**
   * Dapp Popup Add Collateral Page Viewed
   *
   * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Dapp%20Popup%20Add%20Collateral%20Page%20Viewed)
   *
   * This event tracks when a user views the "Add Collateral" page in the Dapp Connector Popup
   * @param options Amplitude event options.
   */
  dappPopupAddCollateralPageViewed(
    options?: EventOptions
  ): PromiseResult<any>;

  /**
   * Dapp Popup Connect Wallet Page Viewed
   *
   * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Dapp%20Popup%20Connect%20Wallet%20Page%20Viewed)
   *
   * This event is triggered when the dapp connector popup is triggered and the user select the wallet that wants to connect.
   * @param properties The event's properties (e.g. wallet_count)
   * @param options Amplitude event options.
   */
  dappPopupConnectWalletPageViewed(
    properties: DappPopupConnectWalletPageViewedProperties,
    options?: EventOptions
  ): PromiseResult<any>;

  /**
   * Dapp Popup Connect Wallet Password Page Viewed
   *
   * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Dapp%20Popup%20Connect%20Wallet%20Password%20Page%20Viewed)
   *
   * This event tracks when a user attempts to connect their wallet by entering their password in the Dapp Connector popup
   * @param options Amplitude event options.
   */
  dappPopupConnectWalletPasswordPageViewed(
    options?: EventOptions
  ): PromiseResult<any>;

  /**
   * Dapp Popup Sign Transaction Page Viewed
   *
   * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Dapp%20Popup%20Sign%20Transaction%20Page%20Viewed)
   *
   * This event tracks when a user loads a sign transaction screen on the dapp connector. Valid for extension and mobile.
   * @param options Amplitude event options.
   */
  dappPopupSignTransactionPageViewed(
    options?: EventOptions
  ): PromiseResult<any>;

  /**
   * Dapp Popup Sign Transaction Submitted
   *
   * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Dapp%20Popup%20Sign%20Transaction%20Submitted)
   *
   * This event tracks the submission of a sign transaction request within the Dapp Connector screen. It's a Popup on extension and a full screen in Mobile.
   * @param options Amplitude event options.
   */
  dappPopupSignTransactionSubmitted(
    options?: EventOptions
  ): PromiseResult<any>;

  /**
   * Governance Choose Drep Page Viewed
   *
   * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Governance%20Choose%20Drep%20Page%20Viewed)
   *
   * This event tracks when user loads the bottom sheet on mobile or the popup on extension to introduce the Drep ID. To arrive to this page the user has to click on “Delegate to a Drep” section.
   * @param options Amplitude event options.
   */
  governanceChooseDrepPageViewed(
    options?: EventOptions
  ): PromiseResult<any>;

  /**
   * Governance Confirm Transaction Page Viewed
   *
   * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Governance%20Confirm%20Transaction%20Page%20Viewed)
   *
   * This event tracks when a user loads the confirm transaction page on the Governance flow. On Extension user would insert the password in that page. On extension user would do it in a bottom sheet afterwards.
   * @param properties The event's properties (e.g. governance_selection)
   * @param options Amplitude event options.
   */
  governanceConfirmTransactionPageViewed(
    properties: GovernanceConfirmTransactionPageViewedProperties,
    options?: EventOptions
  ): PromiseResult<any>;

  /**
   * Governance Dashboard Page Viewed
   *
   * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Governance%20Dashboard%20Page%20Viewed)
   *
   * This event tracks when a user loads the Governance Dashboard Page. The page is reached via the main navigation menu in extension and in the bottom menu icon on Extension.
   * @param options Amplitude event options.
   */
  governanceDashboardPageViewed(
    options?: EventOptions
  ): PromiseResult<any>;

  /**
   * Governance Transaction Success Page Viewed
   *
   * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Governance%20Transaction%20Success%20Page%20Viewed)
   *
   * This event tracks when a user loads the success page at the end of the governance flow.
   * @param properties The event's properties (e.g. governance_selection)
   * @param options Amplitude event options.
   */
  governanceTransactionSuccessPageViewed(
    properties: GovernanceTransactionSuccessPageViewedProperties,
    options?: EventOptions
  ): PromiseResult<any>;

  /**
   * Network Selected
   *
   * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Network%20Selected)
   *
   * Event to track when a user selects a network
   * @param properties The event's properties (e.g. from_network)
   * @param options Amplitude event options.
   */
  networkSelected(
    properties: NetworkSelectedProperties,
    options?: EventOptions
  ): PromiseResult<any>;

  /**
   * NFT Gallery Details Image Viewed
   *
   * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/NFT%20Gallery%20Details%20Image%20Viewed)
   *
   * This event tracks when a user views the NFT image at full screen
   * @param options Amplitude event options.
   */
  nftGalleryDetailsImageViewed(
    options?: EventOptions
  ): PromiseResult<any>;

  /**
   * NFT Gallery Details Navigation
   *
   * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/NFT%20Gallery%20Details%20Navigation)
   *
   * This event tracks when a use next and previous buttons to navigate across their NFTs. Note: available only on Extension.
   * @param properties The event's properties (e.g. nft_navigation)
   * @param options Amplitude event options.
   */
  nftGalleryDetailsNavigation(
    properties: NftGalleryDetailsNavigationProperties,
    options?: EventOptions
  ): PromiseResult<any>;

  /**
   * NFT Gallery Details Page Viewed
   *
   * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/NFT%20Gallery%20Details%20Page%20Viewed)
   *
   * This event tracks when a user views the details page of an NFT item.
   * @param options Amplitude event options.
   */
  nftGalleryDetailsPageViewed(
    options?: EventOptions
  ): PromiseResult<any>;

  /**
   * NFT Gallery Details Tab
   *
   * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/NFT%20Gallery%20Details%20Tab)
   *
   * This event tracks user interactions with the tab in the NFT Gallery details page. It provides insights into how users engage with specific details of NFTs, such as descriptions, attributes, or additional information
   * @param properties The event's properties (e.g. nft_tab)
   * @param options Amplitude event options.
   */
  nftGalleryDetailsTab(
    properties: NftGalleryDetailsTabProperties,
    options?: EventOptions
  ): PromiseResult<any>;

  /**
   * NFT Gallery Grid View Selected
   *
   * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/NFT%20Gallery%20Grid%20View%20Selected)
   *
   * This event is triggered when a user selects the grid view option in the NFT gallery
   * @param properties The event's properties (e.g. nft_grid_view)
   * @param options Amplitude event options.
   */
  nftGalleryGridViewSelected(
    properties?: NftGalleryGridViewSelectedProperties,
    options?: EventOptions
  ): PromiseResult<any>;

  /**
   * NFT Gallery Page Viewed
   *
   * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/NFT%20Gallery%20Page%20Viewed)
   *
   * This event tracks when the NFT gallery it has loaded all nfts metadata
   * @param properties The event's properties (e.g. nft_count)
   * @param options Amplitude event options.
   */
  nftGalleryPageViewed(
    properties: NftGalleryPageViewedProperties,
    options?: EventOptions
  ): PromiseResult<any>;

  /**
   * NFT Gallery Search Activated
   *
   * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/NFT%20Gallery%20Search%20Activated)
   *
   * User activates and starts a search in the NFT gallery. Delay of 0.5 seconds.
   * @param properties The event's properties (e.g. nft_count)
   * @param options Amplitude event options.
   */
  nftGallerySearchActivated(
    properties: NftGallerySearchActivatedProperties,
    options?: EventOptions
  ): PromiseResult<any>;

  /**
   * Portfolio Token Details
   *
   * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Portfolio%20Token%20Details)
   *
   * When user visit the detailed information about a specific token within a user's portfolio. In mobile there's 3 tabs that would be implemented in different iterations.
   * @param properties The event's properties (e.g. token_details_tab)
   * @param options Amplitude event options.
   */
  portfolioTokenDetails(
    properties: PortfolioTokenDetailsProperties,
    options?: EventOptions
  ): PromiseResult<any>;

  /**
   * Portfolio Tokens List Page Viewed
   *
   * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Portfolio%20Tokens%20List%20Page%20Viewed)
   *
   * Event to track when a user views the list of tokens in their portfolio.
   * @param properties The event's properties (e.g. tokens_tab)
   * @param options Amplitude event options.
   */
  portfolioTokensListPageViewed(
    properties: PortfolioTokensListPageViewedProperties,
    options?: EventOptions
  ): PromiseResult<any>;

  /**
   * Portfolio Tokens List Search Activated
   *
   * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Portfolio%20Tokens%20List%20Search%20Activated)
   *
   * This event tracks when a user activates and starts a search in the Tokens list page. Delay of 0.5 seconds.
   * @param properties The event's properties (e.g. search_term)
   * @param options Amplitude event options.
   */
  portfolioTokensListSearchActivated(
    properties: PortfolioTokensListSearchActivatedProperties,
    options?: EventOptions
  ): PromiseResult<any>;

  /**
   * Receive Amount Generated Page Viewed
   *
   * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Receive%20Amount%20Generated%20Page%20Viewed)
   *
   * When the bottom sheet or popup with a generated address with an specific amount is loaded
   * @param properties The event's properties (e.g. ada_amount)
   * @param options Amplitude event options.
   */
  receiveAmountGeneratedPageViewed(
    properties: ReceiveAmountGeneratedPageViewedProperties,
    options?: EventOptions
  ): PromiseResult<any>;

  /**
   * Receive Amount Page Viewed
   *
   * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Receive%20Amount%20Page%20Viewed)
   *
   * When a user visit the page to insert specific amount of ADA that would be needed to generate a wallet address with that specific details.
   * @param options Amplitude event options.
   */
  receiveAmountPageViewed(
    options?: EventOptions
  ): PromiseResult<any>;

  /**
   * Receive Copy Address Clicked
   *
   * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Receive%20Copy%20Address%20Clicked)
   *
   * When a user click on the any CTA to copy their address
   * @param properties The event's properties (e.g. copy_address_location)
   * @param options Amplitude event options.
   */
  receiveCopyAddressClicked(
    properties: ReceiveCopyAddressClickedProperties,
    options?: EventOptions
  ): PromiseResult<any>;

  /**
   * Receive Generate New Address Clicked
   *
   * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Receive%20Generate%20New%20Address%20Clicked)
   *
   * When a user click on the Generate new address button on the main receive page on the multiple address flow.
   * @param options Amplitude event options.
   */
  receiveGenerateNewAddressClicked(
    options?: EventOptions
  ): PromiseResult<any>;

  /**
   * Receive Page List Viewed
   *
   * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Receive%20Page%20List%20Viewed)
   *
   * When user has enabled multiple addresses and goes to the page where he can see the list of generated wallet addresses
   * @param options Amplitude event options.
   */
  receivePageListViewed(
    options?: EventOptions
  ): PromiseResult<any>;

  /**
   * Receive Page Viewed
   *
   * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Receive%20Page%20Viewed)
   *
   * When user loads the Receive funds screen, where user can see their wallet address with a QR Code
   * @param options Amplitude event options.
   */
  receivePageViewed(
    options?: EventOptions
  ): PromiseResult<any>;

  /**
   * Receive Share Address Clicked
   *
   * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Receive%20Share%20Address%20Clicked)
   *
   * When a user click on the link to share the address
   * @param options Amplitude event options.
   */
  receiveShareAddressClicked(
    options?: EventOptions
  ): PromiseResult<any>;

  /**
   * Restore Wallet Details Settled
   *
   * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Restore%20Wallet%20Details%20Settled)
   *
   * This event captures the details of a wallet restoration process that has been successfully completed
   * @param options Amplitude event options.
   */
  restoreWalletDetailsSettled(
    options?: EventOptions
  ): PromiseResult<any>;

  /**
   * Restore Wallet Details Step Viewed
   *
   * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Restore%20Wallet%20Details%20Step%20Viewed)
   *
   * Track when user loads the page where user inserts wallet name and password
   * @param options Amplitude event options.
   */
  restoreWalletDetailsStepViewed(
    options?: EventOptions
  ): PromiseResult<any>;

  /**
   * Restore Wallet Enter Phrase Step Status
   *
   * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Restore%20Wallet%20Enter%20Phrase%20Step%20Status)
   *
   * This events tracks the validation of the recovery phrase is verified, once the user insert the latest word. The output can be positive or negative and we do save that in he property: recovery*prhase*status
   * @param properties The event's properties (e.g. recovery_prhase_status)
   * @param options Amplitude event options.
   */
  restoreWalletEnterPhraseStepStatus(
    properties: RestoreWalletEnterPhraseStepStatusProperties,
    options?: EventOptions
  ): PromiseResult<any>;

  /**
   * Restore Wallet Enter Phrase Step Viewed
   *
   * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Restore%20Wallet%20Enter%20Phrase%20Step%20Viewed)
   *
   * This event tracks when a user views the step to enter the recovery phrase while restoring a wallet (**Step 2**).
   * @param properties The event's properties (e.g. recovery_phrase_lenght)
   * @param options Amplitude event options.
   */
  restoreWalletEnterPhraseStepViewed(
    properties: RestoreWalletEnterPhraseStepViewedProperties,
    options?: EventOptions
  ): PromiseResult<any>;

  /**
   * Restore Wallet Type Step Viewed
   *
   * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Restore%20Wallet%20Type%20Step%20Viewed)
   *
   * This event tracks when a user views the **first step after** selecting restore wallet, were they have to choose between:
   *
   * * 15-word recovery phrase
   *
   * * 24-word recovery phrase
   * @param options Amplitude event options.
   */
  restoreWalletTypeStepViewed(
    options?: EventOptions
  ): PromiseResult<any>;

  /**
   * Send Initiated
   *
   * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Send%20Initiated)
   *
   * This event tracks when a user loads the default state of the first step of the multiasset transaction flow. That screen shows receiver address and optional memo
   * @param options Amplitude event options.
   */
  sendInitiated(options?: EventOptions): PromiseResult<any>;

  /**
   * Send Select Asset Page Viewed
   *
   * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Send%20Select%20Asset%20Page%20Viewed)
   *
   * This event tracks when a user views the "Amount" page in the send flow.
   * @param options Amplitude event options.
   */
  sendSelectAssetPageViewed(
    options?: EventOptions
  ): PromiseResult<any>;

  /**
   * Send Select Asset Selected
   *
   * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Send%20Select%20Asset%20Selected)
   *
   * When a user click "next" on the send flow: "Amount" step on extension / "Assets added" in mobile
   * @param properties The event's properties (e.g. asset_count)
   * @param options Amplitude event options.
   */
  sendSelectAssetSelected(
    properties: SendSelectAssetSelectedProperties,
    options?: EventOptions
  ): PromiseResult<any>;

  /**
   * Send Select Asset Updated
   *
   * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Send%20Select%20Asset%20Updated)
   *
   * When an user update the tokens selection on "amount" step:
   *  \- Add
   *  \- Remove
   *  \- Updated
   * @param properties The event's properties (e.g. asset_count)
   * @param options Amplitude event options.
   */
  sendSelectAssetUpdated(
    properties: SendSelectAssetUpdatedProperties,
    options?: EventOptions
  ): PromiseResult<any>;

  /**
   * Send Summary Page Viewed
   *
   * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Send%20Summary%20Page%20Viewed)
   *
   * When a user loads the Preview page (Could be called comfirmation too) on the send flow.
   * @param properties The event's properties (e.g. asset_count)
   * @param options Amplitude event options.
   */
  sendSummaryPageViewed(
    properties: SendSummaryPageViewedProperties,
    options?: EventOptions
  ): PromiseResult<any>;

  /**
   * Send Summary Submitted
   *
   * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Send%20Summary%20Submitted)
   *
   * When a user click "send" on the "Preview" step on the send flow.
   * @param properties The event's properties (e.g. asset_count)
   * @param options Amplitude event options.
   */
  sendSummarySubmitted(
    properties: SendSummarySubmittedProperties,
    options?: EventOptions
  ): PromiseResult<any>;

  /**
   * Settings Page Viewed
   *
   * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Settings%20Page%20Viewed)
   *
   * This event tracks when a user views the settings page within the application.
   * @param options Amplitude event options.
   */
  settingsPageViewed(
    options?: EventOptions
  ): PromiseResult<any>;

  /**
   * Staking Center Page Viewed
   *
   * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Staking%20Center%20Page%20Viewed)
   *
   * This event tracks when a user views the Staking Center page on Staking menu.
   * @param options Amplitude event options.
   */
  stakingCenterPageViewed(
    options?: EventOptions
  ): PromiseResult<any>;

  /**
   * Swap Asset From Changed
   *
   * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Swap%20Asset%20From%20Changed)
   *
   * When user changed the selected asset on "From" section
   *
   * Owner: Omar Rozak
   * @param properties The event's properties (e.g. from_asset)
   * @param options Amplitude event options.
   */
  swapAssetFromChanged(
    properties: SwapAssetFromChangedProperties,
    options?: EventOptions
  ): PromiseResult<any>;

  /**
   * Swap Asset To Changed
   *
   * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Swap%20Asset%20To%20Changed)
   *
   * When user changed the selected asset on "To" section
   *
   * Owner: Omar Rozak
   * @param properties The event's properties (e.g. to_asset)
   * @param options Amplitude event options.
   */
  swapAssetToChanged(
    properties: SwapAssetToChangedProperties,
    options?: EventOptions
  ): PromiseResult<any>;

  /**
   * Swap Cancelation Submitted
   *
   * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Swap%20Cancelation%20Submitted)
   *
   * When user sign a transaction to cancel the swap order
   *
   * Owner: Omar Rozak
   * @param properties The event's properties (e.g. from_amount)
   * @param options Amplitude event options.
   */
  swapCancelationSubmitted(
    properties: SwapCancelationSubmittedProperties,
    options?: EventOptions
  ): PromiseResult<any>;

  /**
   * Swap Confirmed  Page Viewed
   *
   * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Swap%20Confirmed%20%20Page%20Viewed)
   *
   * When the user opens Completed Order page
   *
   * Owner: Omar Rozak
   * @param properties The event's properties (e.g. swap_tab)
   * @param options Amplitude event options.
   */
  swapConfirmedPageViewed(
    properties: SwapConfirmedPageViewedProperties,
    options?: EventOptions
  ): PromiseResult<any>;

  /**
   * Swap Initiated
   *
   * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Swap%20Initiated)
   *
   * When user clicks on the swap feature and sees the default state of the swap.
   *
   * Owner: Omar Rozak
   * @param properties The event's properties (e.g. from_asset)
   * @param options Amplitude event options.
   */
  swapInitiated(
    properties: SwapInitiatedProperties,
    options?: EventOptions
  ): PromiseResult<any>;

  /**
   * Swap Order Selected
   *
   * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Swap%20Order%20Selected)
   *
   * When user click on "swap" button after selecting asset from, entering the amount of asset form, selecting asset to, entering amount of asset to, and choosing a pool
   *
   * Owner: Omar Rozak
   * @param properties The event's properties (e.g. from_amount)
   * @param options Amplitude event options.
   */
  swapOrderSelected(
    properties: SwapOrderSelectedProperties,
    options?: EventOptions
  ): PromiseResult<any>;

  /**
   * Swap Order Submitted
   *
   * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Swap%20Order%20Submitted)
   *
   * When user click confirm on the check out page, after entering their spending password
   *
   * Owner: Omar Rozak
   * @param properties The event's properties (e.g. from_amount)
   * @param options Amplitude event options.
   */
  swapOrderSubmitted(
    properties: SwapOrderSubmittedProperties,
    options?: EventOptions
  ): PromiseResult<any>;

  /**
   * Swap Pool Changed
   *
   * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Swap%20Pool%20Changed)
   *
   * When user clicked a different pool on the "Select Pool" page
   *
   * Owner: Sergio SF
   * @param options Amplitude event options.
   */
  swapPoolChanged(
    options?: EventOptions
  ): PromiseResult<any>;

  /**
   * Swap Slippage Changed
   *
   * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Swap%20Slippage%20Changed)
   *
   * When user click apply on the swap setting page
   *
   * Owner: Omar Rozak
   * @param properties The event's properties (e.g. slippage_tolerance)
   * @param options Amplitude event options.
   */
  swapSlippageChanged(
    properties: SwapSlippageChangedProperties,
    options?: EventOptions
  ): PromiseResult<any>;

  /**
   * Transactions Page Viewed
   *
   * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Transactions%20Page%20Viewed)
   *
   * This event tracks when a user views the transactions page within the wallet. On mobile is available on the wallet page (First item from main navigation item) in the transactions tab.
   * @param options Amplitude event options.
   */
  transactionsPageViewed(
    options?: EventOptions
  ): PromiseResult<any>;

  /**
   * Voting Page Viewed
   *
   * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Voting%20Page%20Viewed)
   *
   * This event tracks when a user views the Catalyst Voting page.
   * @param options Amplitude event options.
   */
  votingPageViewed(
    options?: EventOptions
  ): PromiseResult<any>;

  /**
   * Wallet Page Viewed
   *
   * [View in Tracking Plan](https://data.amplitude.com/emurgo/Yoroi/events/main/latest/Wallet%20Page%20Viewed)
   *
   * Wallet page is the default page when the user logs into the app and selects the wallet that is going to be using (Once the initial setup is done)
   * @param options Amplitude event options.
   */
  walletPageViewed(
    options?: EventOptions
  ): PromiseResult<any>;
}
declare export var ampli: Ampli;
declare type BrowserOptions = any;
export type BrowserClient = any;
export type IdentifyEvent = any;
export type GroupEvent = any;
export type Event = any;
export type EventOptions = any;
export type Result = any;
