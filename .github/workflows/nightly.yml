on:
  push:
    branches:
      - 'release/**'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1
        with:
          path: packages/yoroi-extension

      - name: Check if version has been updated
        id: check
        uses: EndBug/version-check@v2
        with:
          diff-search: true
          file-name: ./packages/yoroi-extension/package.json

      - name: Read .nvmrc
        if: steps.check.outputs.changed == 'true'
        run: echo ::set-output name=NVMRC::$(cat .nvmrc)
        id: nvm

      - name: Setup node
        if: steps.check.outputs.changed == 'true'
        uses: actions/setup-node@v1
        with:
          node-version: '${{ steps.nvm.outputs.NVMRC }}'

      - name: npm install
        if: steps.check.outputs.changed == 'true'
        run: |
          npm i --legacy-peer-deps 
          npm i --legacy-peer-deps --prefix packages/yoroi-extension 

      - name: Build
        if: steps.check.outputs.changed == 'true'
        run: |
          cd packages/yoroi-extension
          npm run prod:nightly

      - name: Install Octopus CLI 
        if: steps.check.outputs.changed == 'true'
        uses: OctopusDeploy/install-octopus-cli-action@v1.1.8
        with:
          version: latest

      - name: Move package file 
        if: steps.check.outputs.changed == 'true'
        run: mv "packages/yoroi-extension/Yoroi Nightly.zip" yoroi-frontend.${{ steps.check.outputs.version }}.zip

      - name: Push package to Octopus Deploy 
        if: steps.check.outputs.changed == 'true'
        uses: OctopusDeploy/push-package-action@v1.0.1
        with:
          packages: 'yoroi-frontend.${{ steps.check.outputs.version }}.zip'
          server: https://emurgo.octopus.app
          api_key: ${{ secrets.OCTOPUS_API_KEY }}

      - name: Create release 
        if: steps.check.outputs.changed == 'true'
        uses: OctopusDeploy/create-release-action@v1.1.3
        with:
          server: https://emurgo.octopus.app
          api_key: ${{ secrets.OCTOPUS_API_KEY }}
          project: 'yoroi-frontend'
          channel: 'Nightly'
          packages: 'yoroi-frontend:${{ steps.check.outputs.version }}'
          release_number: '${{ steps.check.outputs.version }}'
  

